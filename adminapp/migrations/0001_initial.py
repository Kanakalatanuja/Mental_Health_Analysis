# Generated by Django 4.1.2 on 2025-02-07 06:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ADA_ALGO',
            fields=[
                ('ADA_ALGO_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'ADA_algo',
            },
        ),
        migrations.CreateModel(
            name='BILSTM',
            fields=[
                ('BILSTM_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'BILSTM_algo',
            },
        ),
        migrations.CreateModel(
            name='DATASET',
            fields=[
                ('DS_ID', models.AutoField(primary_key=True, serialize=False)),
                ('current', models.FloatField()),
                ('inst_energy', models.FloatField()),
                ('pf', models.FloatField()),
                ('house_interval', models.FloatField()),
                ('voltage', models.FloatField()),
                ('freaquency', models.FloatField()),
                ('day', models.FloatField()),
            ],
            options={
                'db_table': 'Dataset',
            },
        ),
        migrations.CreateModel(
            name='DECISSION_ALGO',
            fields=[
                ('DECISSION_ALGO_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'DECISSION_algo',
            },
        ),
        migrations.CreateModel(
            name='GradientBoosting',
            fields=[
                ('GradientBoosting_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': ' GradientBoosting_algo',
            },
        ),
        migrations.CreateModel(
            name='KNN_ALGO',
            fields=[
                ('KNN_ALGO_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'KNN_algo',
            },
        ),
        migrations.CreateModel(
            name='LGBMR',
            fields=[
                ('LGBMR_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'LGBMR_algo',
            },
        ),
        migrations.CreateModel(
            name='Logistic',
            fields=[
                ('Logistic_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'Logistic_algo',
            },
        ),
        migrations.CreateModel(
            name='LSTM',
            fields=[
                ('LSTM_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'LSTM_algo',
            },
        ),
        migrations.CreateModel(
            name='RandomForest',
            fields=[
                ('RandomForest_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'RandomForest_algo',
            },
        ),
        migrations.CreateModel(
            name='RFR',
            fields=[
                ('RFR_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'RFR_algo',
            },
        ),
        migrations.CreateModel(
            name='Upload_dataset_model',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('Dataset', models.FileField(null=True, upload_to='')),
                ('File_size', models.CharField(max_length=100)),
                ('Date_Time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'upload_dataset',
            },
        ),
        migrations.CreateModel(
            name='XGBR',
            fields=[
                ('XGBR_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Accuracy', models.TextField(max_length=100)),
                ('Precession', models.TextField(max_length=100)),
                ('F1_Score', models.TextField(max_length=100)),
                ('Recall', models.TextField(max_length=100)),
                ('Name', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'XGBR_algo',
            },
        ),
    ]
